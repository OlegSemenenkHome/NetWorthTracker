plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    alias(libs.plugins.kapt)
    alias(libs.plugins.hiltPlugin)
}

android {
    namespace 'com.networthtracker.presentation'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.0'
    }
}

dependencies {
    implementation project(':data')

    //Core
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')

    // M3
    implementation(libs.material3)
    implementation(libs.androidx.material3.window)

    implementation(platform(libs.compose.bom))
    implementation(libs.navigation.compose)
    implementation(libs.core.ktx)
    implementation(libs.lifecycle.runtime.ktx)
    implementation(libs.androidx.lifecycle.viewmodel.ktx)
    implementation(libs.androidx.animation)
    implementation(libs.activity.compose)
    implementation(libs.ui)
    implementation(libs.ui.graphics)
    implementation(libs.ui.tooling.preview)

    debugImplementation(libs.ui.tooling)

    //To help check for leaks commented out since it harms performance
    // debugImplementation (libs.leakcanary.android)

    //networking
    implementation(libs.converter.moshi)
    ksp(libs.moshi)
    implementation(libs.retrofit)
    implementation(libs.okhttp)

    //hilt
    kapt(libs.hilt.compiler)
    implementation(libs.hilt.android)
    implementation(libs.androidx.hilt.navigation.compose)

    //Coil
    implementation(libs.coil.compose)
}